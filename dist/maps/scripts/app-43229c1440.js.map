{"version":3,"sources":["scripts/app.js"],"names":["angular","module","acmeNavbar","eventsFactory","NavbarController","directive","restrict","templateUrl","scope","creationDate","controller","controllerAs","bindToController","$inject","MainController","$timeout","toastr","$interval","activate","vm","classAnimation","showToastr","info","setEvents","response","loading_events","events","updateAttendateResult","console","log","error","attendanace_flg","coming","checkEventStatus","mainevent","getEventStatus","id","user_name","then","updateAttendateMainEvent","modifyEvent","setMainEvent","event","selected_mainevent","getThumbnailUrl","images","length","getImageUrl","event_id","image","this","location","city","awesomeThings","listEvents","factory","$rootScope","request","$config","headers","window","btoa","$q","$http","$cookies","success","data","config","method","resolve","reject","listEventsUrl","base_address","get","eventStatusUrl","attendance_flg","payload","put","services","runBlock","$log","debug","run","routerConfig","$stateProvider","$urlRouterProvider","state","url","otherwise","$logProvider","toastrConfig","$httpProvider","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","interceptors","push","$templateCache"],"mappings":"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","file":"scripts/app-43229c1440.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('dragonflyApp', ['ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize', 'ngMessages', 'ngAria', 'ui.router', 'ui.bootstrap', 'toastr', 'angular.img']);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('dragonflyApp')\n    .directive('acmeNavbar', acmeNavbar);\n\n  /** @ngInject */\n  function acmeNavbar(eventsFactory) {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/navbar/navbar.html',\n      scope: {\n          creationDate: '='\n      },\n      controller: NavbarController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController() {\n      var vm = this;\n\n      // vm.changing_username = false;\n      // console.log(eventsFactory.getCurrentUser());\n      // vm.user_name = eventsFactory.getCurrentUser();\n\n      // vm.edit_username = edit_username;\n      // vm.save_username = save_username;\n\n      // function save_username()\n      // {\n      //   eventsFactory.setCurrentUser(vm.edit_username);\n      //   edit_username();\n      // }\n      // function edit_username()\n      // {\n      //   if(vm.changing_username)\n      //   {\n      //     vm.changing_username = false;\n      //   }\n      //   else\n      //   {\n      //     vm.changing_username = true;\n      //   }\n      // }\n\n\n\n\n      // \"vm.creationDate\" is available by directive option \"bindToController: true\"\n      //vm.relativeDate = moment(vm.creationDate).fromNow();\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('dragonflyApp')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController($timeout, toastr, eventsFactory, $interval) {\n\n\n    var vm = this;\n\n    vm.user_name = \"shubinwu\";\n    vm.attendanace_flg = true;\n\n    vm.selected_mainevent = false;\n    vm.mainevent = {};\n    vm.mainevent.location = {};\n    vm.mainevent.location.city = \"\";\n\n    vm.awesomeThings = [];\n    vm.events = [];\n    vm.loading_events = true;\n    vm.classAnimation = '';\n    vm.creationDate = 1520721760682;\n    vm.showToastr = showToastr;\n\n    vm.getThumbnailUrl = getThumbnailUrl;\n\n    vm.setMainEvent = setMainEvent;\n    vm.getImageUrl = getImageUrl;\n\n    vm.updateAttendateMainEvent = updateAttendateMainEvent;\n\n    activate();\n\n//    console.log(eventsFactory.listEvents());\n\n    eventsFactory.listEvents().then(setEvents);\n\n    function activate() {\n\n      $timeout(function() {\n        vm.classAnimation = 'rubberBand';\n      }, 4000);\n    }\n\n    function showToastr() {\n      toastr.info('Fork <a href=\"https://github.com/Swiip/generator-gulp-angular\" target=\"_blank\"><b>generator-gulp-angular</b></a>');\n      vm.classAnimation = '';\n    }\n\n    function setEvents(response)\n    {\n      vm.loading_events = false;\n\n      \n      vm.events = response;\n\n      //console.log(\"WTFFF\");\n\n    }\n\n    //Stuff to get attendance for event\n    function updateAttendateResult(response)\n    {\n      console.log(\"updating attendate result\");\n      console.log(response);\n\n\n      if(response === \"\")\n      {\n        toastr.error('Error getting event status from server');\n        //vm.attendanace_flg = false;\n        //return;\n      }\n\n      vm.attendanace_flg = response.coming;\n      \n    }\n\n    function checkEventStatus()\n    {\n      if('id' in vm.mainevent)\n      {\n        eventsFactory.getEventStatus(vm.mainevent.id, vm.user_name).then(updateAttendateResult)\n      }\n    }\n    $interval(checkEventStatus, 4000);\n\n\n\n    function updateAttendateMainEvent()\n    {\n      console.log(\"inside updateAttendateResult \" + vm.attendanace_flg);\n      console.log(\"updateAttendateMainEvent:::this the evewnt id \" + vm.mainevent.id);\n      eventsFactory.modifyEvent(vm.mainevent.id, vm.user_name, vm.attendanace_flg).then( function() \n      { \n         } );\n      //eventsFactory.getEventStatus(event.id, vm.user_name).then(updateAttendateResult);\n    }\n\n    function setMainEvent(event) {\n      vm.selected_mainevent = true;\n      vm.mainevent = event;\n      console.log(\"setMainEvent:::this the evewnt id \" + event.id);\n      //eventsFactory.getEventStatus(event.id, vm.user_name).then(updateAttendateResult);\n    }\n\n    function getThumbnailUrl(event)\n    {\n\n\n\n      if('id' in event && 'images' in event && event.images.length > 0)\n      {\n      return \"http://dev.dragonflyathletics.com:1337/api/dfkey/events/\" + event.id + \"/media/\" + event.images[0].id;\n      }\n      else\n      {\n        return \"\";\n      }\n\n    }\n\n\n    function getImageUrl(event_id, image)\n    {\n      return \"http://dev.dragonflyathletics.com:1337/api/dfkey/events/\" + event_id + \"/media/\" + image.id;\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n\nangular.module('dragonflyApp')\n.factory('httpRequestInterceptor',\n['$rootScope', function($rootScope)\n {\n  return {\n   request: function($config) {\n\n\n   \t// if($rootScope.user === undefined)\n   \t// {\n   \t\t$config.headers['Authorization'] = \"Basic \" +  window.btoa(\"FAKKEE\" +  \":evalpass\");\n   \t// }\n\n   \t// // else\n   \t// // {\n   \t// // \t$config.headers['Authorization'] = \"Basic \" +  window.btoa($rootScope.user +  \":evalpass\");\n   \t// // }\n\n     \n\n\n\n  return $config;\n  }\n };\n}]);\n\n\n\n})();\n(function() {\n  'use strict';\n\n  angular\n      .module('dragonflyApp')\n      .factory('eventsFactory', ['$q', '$http', 'toastr', '$cookies', '$rootScope',  function($q, $http, toastr, $cookies, $rootScope) {\n\n    var services = {\n      // getCurrentUser: getCurrentUser,\n      // setCurrentUser: setCurrentUser,\n      listEvents : listEvents,\n      getEventStatus : getEventStatus,\n      modifyEvent: modifyEvent\n//      ,getEventStatus: getEventStatus\n//      setEventStatus: setEventStatus\n    }\n\n        var base_address = \"http://dev.dragonflyathletics.com:1337/api/dfkey/\";\n\n\n    // function getCurrentUser()\n    // {\n    //   console.log(\"this current user got called\");\n    //   if($cookies.get(\"user\") === undefined)\n    //   {\n    //     setCurrentUser(\"default\");\n    //     $rootScope.user = \"default\";\n    //     return \"default\";\n    //   }\n    //   else\n    //   {\n    //     return $cookies.get(\"user\");\n    //   }\n    // }\n\n    // function setCurrentUser(user)\n    // {\n    //   $cookies.put(\"user\", user);\n    //   $rootScope.user = user;\n    //   //interceptors.push('httpRequestInterceptor');\n    //   toastr.info('Succesfully changed user name');\n\n\n    // }\n\n    function success(data) {\n\n            //if data.config.url has \"status\" and if it is put then toastr.info succesfully updated attendance\n\n            if(data.config.method === \"PUT\")\n            {\n              toastr.info('Succesfully updated attendance for event');\n            }\n            console.log(data);\n\n            return $q.resolve(data.data);\n        }\n\n        function error(error) {\n          //if data.config.url has \"status\" and if it is put then toastr.info then error toaster updating event attendance\n          if( error.config.method === \"PUT\")\n            {\n              toastr.error('Unable to update attendance for event');\n            }\n            console.log(error);\n            console.log(\"There was an error\");\n\n\n            return $q.reject(error);\n        }\n\n        function listEvents()\n        {\n          var listEventsUrl = base_address + 'events';\n\n          //var auth = window.btoa(\"shubinwu:evalpass\");\n          //var headers = {\"Authorization\": \"Basic \" + auth};\n\n          return $http.get(listEventsUrl).then(success, error);\n\n        }\n        //{apiRoot}/events/{eventId}/status/{userName}\n\n        function getEventStatus(event_id, user_name)\n        {\n          var eventStatusUrl = base_address + \"events/\" + event_id + \"/status/\" + user_name;\n\n          return $http.get(eventStatusUrl).then(success, error);\n        }\n\n        function modifyEvent(event_id, user_name, attendance_flg)\n        {\n          var payload = {\"coming\" : attendance_flg}\n          var eventStatusUrl = base_address + \"events/\" + event_id + \"/status/\" + user_name;\n\n          return $http.put(eventStatusUrl, payload).then(success, error);\n        }\n\n    return services;\n  }]);\n     \n  \n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('dragonflyApp')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('dragonflyApp')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('home', {\n        url: '/',\n        templateUrl: 'app/main/main.html',\n        controller: 'MainController',\n        controllerAs: 'main'\n      });\n\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('dragonflyApp');\n\n\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('dragonflyApp')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig, $httpProvider) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = true;\n\n    $httpProvider.interceptors.push('httpRequestInterceptor');\n  }\n\n})();\n\nangular.module(\"dragonflyApp\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main/main.html\",\"<div class=container><div><acme-navbar creation-date=main.creationDate></acme-navbar></div><div class=\\\"jumbotron text-center\\\" ng-show=main.selected_mainevent><h1>{{main.mainevent.name}}</h1><h4>{{main.mainevent.location.city}}</h4><div><div uib-carousel active=active interval=myInterval no-wrap=noWrapSlides><div uib-slide ng-repeat=\\\"image in main.mainevent.images track by $index\\\" index=$index><img http-src=\\\"{{main.getImageUrl(main.mainevent.id, image)}}\\\" style=margin:auto><div class=carousel-caption><p>{{image.caption}}</p></div></div></div></div><br><uib-accordion close-others=oneAtATime><div uib-accordion-group class=panel-default heading=Description><p><small>{{main.mainevent.description}}</small></p></div><div uib-accordion-group class=panel-danger heading=Comments><div ng-repeat=\\\"comment in main.mainevent.comments\\\"><h3>{{comment.from}}</h3><blockquote class=blockquote><p class=mb-0>{{comment.text}}</p></blockquote></div></div><div uib-accordion-group class=panel-default heading=Location><h6>{{main.mainevent.location.name}}</h6><p><small>{{main.mainevent.location.address}}</small></p><p><small>{{main.mainevent.location.city}}, {{main.mainevent.location.state}}</small></p></div></uib-accordion><div class=btn-group ng-hide=main.attendanace_flg><label class=\\\"btn btn-primary\\\" ng-model=main.attendanace_flg ng-click=main.updateAttendateMainEvent() uib-btn-checkbox>Go to Event</label></div><div class=btn-group ng-show=main.attendanace_flg><label class=\\\"btn btn-danger\\\" ng-model=main.attendanace_flg ng-click=main.updateAttendateMainEvent() uib-btn-checkbox>Cancel Reservation</label></div></div><br><div ng-hide=main.loading_events><h1>Events</h1><div class=row><div class=\\\"col-sm-6 col-md-4\\\" ng-repeat=\\\"event in main.events track by $index\\\"><div class=thumbnail ng-click=main.setMainEvent(event)><!--<img class=\\\"pull-right\\\" src=\\\"assets/images/yeoman.png\\\" alt=\\\"I\\'m Yeoman\\\">--> <img class=pull-right http-src={{main.getThumbnailUrl(event)}}><div class=caption><h3>{{ event.name }}</h3><p>{{ event.location.city }}</p><p><a ng-href={{event.url}}>{{ event.url }}</a></p></div></div></div></div></div><div ng-show=main.loading_events><h1>Loading events...</h1></div></div>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<nav class=\\\"navbar navbar-static-top navbar-inverse\\\"><div class=container-fluid><div class=navbar-header><h2 class=navbar-brand ng-click=vm.edit_username()><span class=\\\"glyphicon glyphicon-home\\\"></span> Events App</h2><!--       <div class=\\\"form-group\\\" ng-show=\\\"vm.changing_username\\\">\\n        <label class=\\\"navbar-brand\\\">Username:</label>\\n        <input type=\\\"text\\\" ng-model=\\\"vm.user_name\\\" class=\\\"form-control\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.save_username()\\\">\\n        Save\\n        </button>\\n      </div> --></div></div></nav>\");}]);"],"sourceRoot":"/source/"}